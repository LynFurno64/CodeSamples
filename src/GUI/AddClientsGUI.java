package GUI;

import java.awt.*;
import java.awt.event.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Locale;
import java.util.UUID;
import javax.swing.JComboBox;
import java.lang.StringBuilder;

import members.Customer;
import methods.Country;
import methods.Notice;
import methods.code;
import methods.connectMethod;

/**
 * @author Ch√© Alexander
 */
public class AddClientsGUI extends javax.swing.JFrame {

    Notice popup = new Notice();
    String sex = "";
    String selectedCountry = "";


    /**
     * Creates new form AddClientsGUI
     */
    public AddClientsGUI() {
        initComponents();
        
        // Get size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w, h, x, y;
        w = this.getSize().width;
        h = this.getSize().height;
        x = (dim.width - w) / 2;
        y = (dim.height - h) / 2;
        // Move the Window
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        north = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        south = new javax.swing.JPanel();
        signUp = new javax.swing.JButton();
        east = new javax.swing.JPanel();
        west = new javax.swing.JPanel();
        bodyPanel = new javax.swing.JPanel();
        fname = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        tfname = new javax.swing.JTextField();
        tfsname = new javax.swing.JTextField();
        textS = new javax.swing.JLabel();
        male = new javax.swing.JCheckBox();
        female = new javax.swing.JCheckBox();
        other = new javax.swing.JCheckBox();
        surname = new javax.swing.JLabel();
        textE = new javax.swing.JLabel();
        country = new javax.swing.JLabel();
        cell = new javax.swing.JLabel();
        textDoB = new javax.swing.JLabel();
        code = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        state = new javax.swing.JLabel();
        textP = new javax.swing.JLabel();
        textC = new javax.swing.JLabel();
        tfaddress = new javax.swing.JTextField();
        tfstate = new javax.swing.JTextField();
        tfcode = new javax.swing.JTextField();
        tfemail = new javax.swing.JTextField();
        tfpassword = new javax.swing.JPasswordField();
        date = new com.toedter.calendar.JDateChooser();
        textFN = new javax.swing.JLabel();
        textA = new javax.swing.JLabel();
        Country[] listCountry = createCountryList();
        comboCountry = new JComboBox<>(listCountry);
        tfrenter = new javax.swing.JPasswordField();
        textP1 = new javax.swing.JLabel();
        tfcell = new javax.swing.JFormattedTextField();
        tfhome = new javax.swing.JFormattedTextField();
        emailError = new javax.swing.JLabel();
        retype = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registration");

        north.setBackground(new java.awt.Color(153, 255, 255));
        north.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        north.setForeground(new java.awt.Color(0, 0, 0));

        title.setBackground(new java.awt.Color(255, 255, 255));
        title.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setText("New Account");
        north.add(title);

        getContentPane().add(north, java.awt.BorderLayout.PAGE_START);

        south.setBackground(new java.awt.Color(204, 255, 255));

        signUp.setBackground(new java.awt.Color(204, 255, 255));
        signUp.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        signUp.setForeground(new java.awt.Color(0, 0, 0));
        signUp.setText("Sign Up");
        signUp.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        signUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpActionPerformed(evt);
            }
        });
        south.add(signUp);

        getContentPane().add(south, java.awt.BorderLayout.PAGE_END);

        east.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(east, java.awt.BorderLayout.LINE_END);

        west.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(west, java.awt.BorderLayout.LINE_START);

        bodyPanel.setBackground(new java.awt.Color(204, 204, 204));
        bodyPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createTitledBorder("")));
        bodyPanel.setForeground(new java.awt.Color(255, 255, 255));

        fname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fname.setForeground(new java.awt.Color(0, 0, 0));
        fname.setText(" First Name");
        fname.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        address.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        address.setForeground(new java.awt.Color(0, 0, 0));
        address.setText(" Steet Address");

        tfname.setBackground(new java.awt.Color(255, 255, 255));
        tfname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfname.setForeground(new java.awt.Color(0, 0, 0));

        tfsname.setBackground(new java.awt.Color(255, 255, 255));
        tfsname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfsname.setForeground(new java.awt.Color(0, 0, 0));

        textS.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textS.setForeground(new java.awt.Color(0, 0, 0));
        textS.setText("Gender");
        textS.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        male.setBackground(new java.awt.Color(204, 204, 204));
        gender.add(male);
        male.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        male.setForeground(new java.awt.Color(0, 0, 0));
        male.setText("Male");
        male.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 255, 255), new java.awt.Color(51, 51, 51), null));
        male.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        female.setBackground(new java.awt.Color(204, 204, 204));
        gender.add(female);
        female.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        female.setForeground(new java.awt.Color(0, 0, 0));
        female.setText("Female");
        female.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 51, 51), new java.awt.Color(0, 0, 0), null));
        female.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        other.setBackground(new java.awt.Color(204, 204, 204));
        gender.add(other);
        other.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        other.setForeground(new java.awt.Color(0, 0, 0));
        other.setText("Other");
        other.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        other.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        other.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherActionPerformed(evt);
            }
        });

        surname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        surname.setForeground(new java.awt.Color(0, 0, 0));
        surname.setText(" Surname");
        surname.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        textE.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textE.setForeground(new java.awt.Color(0, 0, 0));
        textE.setText("E-mail");

        country.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        country.setForeground(new java.awt.Color(0, 0, 0));
        country.setText(" Country");
        country.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cell.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cell.setForeground(new java.awt.Color(0, 0, 0));
        cell.setText(" Cell");

        textDoB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textDoB.setForeground(new java.awt.Color(0, 0, 0));
        textDoB.setText("Date of Birth");
        textDoB.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        code.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        code.setForeground(new java.awt.Color(0, 0, 0));
        code.setText(" Postal/Zip Code");
        code.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        home.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        home.setForeground(new java.awt.Color(0, 0, 0));
        home.setText(" Home");

        state.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        state.setForeground(new java.awt.Color(0, 0, 0));
        state.setText(" State/Province");
        state.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        textP.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textP.setForeground(new java.awt.Color(0, 0, 0));
        textP.setText("Password");

        textC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textC.setForeground(new java.awt.Color(0, 0, 0));
        textC.setText("Contacts");
        textC.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        tfaddress.setBackground(new java.awt.Color(255, 255, 255));
        tfaddress.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfaddress.setForeground(new java.awt.Color(0, 0, 0));

        tfstate.setBackground(new java.awt.Color(255, 255, 255));
        tfstate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfstate.setForeground(new java.awt.Color(0, 0, 0));

        tfcode.setBackground(new java.awt.Color(255, 255, 255));
        tfcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfcode.setForeground(new java.awt.Color(0, 0, 0));

        tfemail.setBackground(new java.awt.Color(255, 255, 255));
        tfemail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfemail.setForeground(new java.awt.Color(0, 0, 0));
        tfemail.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
            }

            @Override
            public void focusLost(FocusEvent e) {
                checkEmail ce = new checkEmail();
                ce.start();
            }
        });

        tfpassword.setBackground(new java.awt.Color(255, 255, 255));
        tfpassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfpassword.setForeground(new java.awt.Color(0, 0, 0));

        date.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        date.setName("date\n"); // NOI18N
        date.setOpaque(false);

        textFN.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textFN.setForeground(new java.awt.Color(0, 0, 0));
        textFN.setText("Full Name");
        textFN.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        textA.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textA.setForeground(new java.awt.Color(0, 0, 0));
        textA.setText("Address");
        textA.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        comboCountry.setModel(new javax.swing.DefaultComboBoxModel<>(listCountry));
        comboCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCountryActionPerformed(evt);
            }
        });

        tfrenter.setBackground(new java.awt.Color(255, 255, 255));
        tfrenter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfrenter.setForeground(new java.awt.Color(0, 0, 0));
        tfrenter.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
            }

            @Override
            public void focusLost(FocusEvent e) {
                checkPassword cp = new checkPassword();
                cp.start();
            }
        });

        textP1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        textP1.setForeground(new java.awt.Color(0, 0, 0));
        textP1.setText("Re-enter Password");

        try {
            tfcell.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###) ###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfhome.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        emailError.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        emailError.setForeground(new java.awt.Color(255, 255, 255));
        emailError.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        retype.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        retype.setForeground(new java.awt.Color(255, 255, 255));
        retype.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textS)
                    .addComponent(textDoB)
                    .addComponent(textFN)
                    .addComponent(textC)
                    .addComponent(textA)
                    .addComponent(textE)
                    .addComponent(textP)
                    .addComponent(textP1))
                .addGap(48, 48, 48)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bodyPanelLayout.createSequentialGroup()
                            .addComponent(tfemail, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(emailError, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfpassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfstate, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(state)
                                    .addComponent(comboCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(country))
                                .addGap(85, 85, 85)
                                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(code)
                                    .addComponent(tfcode, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addComponent(tfrenter, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(retype, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(203, 203, 203))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bodyPanelLayout.createSequentialGroup()
                        .addComponent(tfname, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(228, 228, 228))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bodyPanelLayout.createSequentialGroup()
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(address)
                                .addComponent(tfaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(bodyPanelLayout.createSequentialGroup()
                                    .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cell)
                                        .addComponent(tfcell, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(home)
                                        .addComponent(tfhome, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(bodyPanelLayout.createSequentialGroup()
                                    .addComponent(male)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(female)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(other))
                                .addComponent(fname))
                            .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(surname)
                                .addComponent(tfsname, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFN)
                    .addComponent(tfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfsname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fname)
                    .addComponent(surname))
                .addGap(19, 19, 19)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(male)
                            .addComponent(female)
                            .addComponent(other))
                        .addGap(18, 18, 18)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(textS)
                        .addGap(18, 18, 18)
                        .addComponent(textDoB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfcell)
                            .addComponent(tfhome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(textC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell)
                    .addComponent(home))
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(address)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state)
                    .addComponent(code))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(country)
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textE))
                    .addComponent(emailError, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textP, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfrenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textP1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(retype, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        getContentPane().add(bodyPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**Checkbox conditions*/
    private void maleActionPerformed(ActionEvent evt) {
        sex = "Male";
    }// event_maleActionPerformed

    private void femaleActionPerformed(ActionEvent evt) {
        sex = "Female";
    }// event_femaleActionPerformed

    private void otherActionPerformed(ActionEvent evt) {
        sex = "Other";
    }// event_otherActionPerformed

    private void comboCountryActionPerformed(ActionEvent evt) {
        selectedCountry = comboCountry.getSelectedItem().toString();
        System.out.println(selectedCountry);
    }// event_comboCountryActionPerformed

    // Reset everything
    public void clearFields() {
        tfname.setText(null);
        tfsname.setText(null);
        date.setDate(null);
        tfcell.setValue(null);
        tfhome.setValue(null);
        tfaddress.setText(null);
        tfstate.setText(null);
        tfcode.setText(null);
        tfemail.setText(null);
        tfpassword.setText(null);
        tfrenter.setText(null);

        gender.clearSelection();
        comboCountry.setSelectedIndex(0);
        retype.setText(null);
        emailError.setText(null);

        sex = "";
        selectedCountry = "";
        //Positions the cursor back in the number text field
        tfname.requestFocusInWindow();
    }// clearFields

    // Populating the Customer database \\
    private void signUpActionPerformed(java.awt.event.ActionEvent evt) {

        String name, surname, birthday, cell_num, home_num, street_address, state, zip_code, email, password;

        name = tfname.getText();
        surname = tfsname.getText();
        // Changing the JDateChooser Format \\
        DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
        if (date.getDate() == null) {
            birthday = "";
        } else {
            birthday = fmt.format(date.getDate()); //jdatechooser
        }
        cell_num = tfcell.getText();
        home_num = tfhome.getText();
        street_address = tfaddress.getText();
        state = tfstate.getText();
        zip_code = tfcode.getText();
        email = tfemail.getText();
        password = tfrenter.getText();
        String dumcode = "";

        int length = password.length();

        // If no fields are filled in expect reason than a dialog box will appear
        if (!(email.contains("@") && (email.contains(".com") || email.contains(".co") || email.contains(".net") || email.contains(".org") || email.contains(".edu")))) {
            popup.emailnotice();
        } else if (!password.equals(tfpassword.getText())) {
            popup.password();
        }
        else if (length > 10) {
            popup.passwordLength();
        }
        else if (name.equals("") || surname.equals("") || birthday.equals("") || cell_num.equals("(   )    -    ") || home_num.equals("    -    ") || sex.equals("") || street_address.equals("") || state.equals("") || selectedCountry.equals("") || zip_code.equals("") || email.equals("") || password.equals("")) {
            popup.notice();
        }
         else {
            // Sends the data to database
            Customer user = new Customer(dumcode, name, surname, sex, birthday, street_address, selectedCountry, state, zip_code, cell_num, home_num, email, password);
            connectMethod data = new connectMethod();
            code code = new code();
            if(data.openConnection()) {
                code.insertSerialNo(user);
                data.closeConnection();
                popup.submit();
            }
            clearFields();
        }

    }// event_signUpActionPerformed


    // Counrty List
     private Country[] createCountryList() {
        String[] countryCodes = Locale.getISOCountries();
        Country[] listCountry = new Country[countryCodes.length];

        for (int i = 0; i < countryCodes.length; i++) {
            Locale locale = new Locale("", countryCodes[i]);
            String code = locale.getCountry();
            String name = locale.getDisplayCountry();

            listCountry[i] = new Country(code, name);
        }
        Arrays.sort(listCountry);
        return listCountry;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JLabel cell;
    private javax.swing.JLabel code;
    private javax.swing.JComboBox<Country> comboCountry;
    private javax.swing.JLabel country;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JPanel east;
    static private javax.swing.JLabel emailError;
    private javax.swing.JCheckBox female;
    private javax.swing.JLabel fname;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JLabel home;
    private javax.swing.JCheckBox male;
    static private javax.swing.JLabel retype;
    private javax.swing.JPanel north;
    private javax.swing.JCheckBox other;
    private javax.swing.JButton signUp;
    private javax.swing.JPanel south;
    private javax.swing.JLabel state;
    private javax.swing.JLabel surname;
    private javax.swing.JLabel textA;
    private javax.swing.JLabel textC;
    private javax.swing.JLabel textDoB;
    private javax.swing.JLabel textE;
    private javax.swing.JLabel textFN;
    private javax.swing.JLabel textP;
    private javax.swing.JLabel textP1;
    private javax.swing.JLabel textS;
    private javax.swing.JTextField tfaddress;
    private javax.swing.JFormattedTextField tfcell;
    private javax.swing.JTextField tfcode;
    static private javax.swing.JTextField tfemail;
    private javax.swing.JFormattedTextField tfhome;
    private javax.swing.JTextField tfname;
    static private javax.swing.JPasswordField tfpassword;
    static private javax.swing.JPasswordField tfrenter;
    private javax.swing.JTextField tfsname;
    private javax.swing.JTextField tfstate;
    private javax.swing.JLabel title;
    private javax.swing.JPanel west;
    // End of variables declaration//GEN-END:variables

    //Inner class for thread
    static class checkEmail extends Thread {
        public void run() {
            String e = tfemail.getText();
            if (e.contains("@") && (e.contains(".com") || e.contains(".co") || e.contains(".net") || e.contains(".org") || e.contains(".edu"))) {
                emailError.setForeground(new Color(0, 255, 255));
                emailError.setText("Good Job");
            } else {
                emailError.setForeground(new Color(255, 0, 0));
                emailError.setText("@ and domain required");
            }
        }
    }



    //Thread
    static class checkPassword extends Thread {
        /** @noinspection deprecation*/
        public void run() {

            String p, rp;
            p = tfpassword.getText();
            rp = tfrenter.getText();
            int l = p.length();
            int l2 = rp.length();
            retype.setForeground(new Color(255, 0,0));

            if (rp.equals("")) {
                retype.setText(" ");
            } else if (l > 10 || l2 > 10) {
                retype.setText("10 MAX!");
            }else if (!rp.equals(p)) {
                retype.setText("Not a match");
            } else {
                retype.setText("Great");
            }
        }
    }
    
}
